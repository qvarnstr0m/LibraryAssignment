@page "/search-result/{SearchTerm}"
@using LibraryAssignment.Data.Models
@using LibraryAssignment.BlazorWASM.Interfaces
@inject IBookService BookService
@inject SpinnerService SpinnerService

<PageTitle>search result - library.</PageTitle>

<h1 class="text-6xl mb-10">search result.</h1>

@if (BooksList != null && BooksList.Any())
{
    <div class="flex flex-wrap justify-between justify-items-start px-5 py-5">
        @foreach (var book in BooksList)
        {
            <BookCard
                Id="@book.Id.ToString()"
                Title="@book.Title"
                Author="@book.Author"
                Description="@book.Description"
                IsAvailable="@book.IsAvailable"
                BookCoverFileName="@book.BookCoverFileName"/>
        }
    </div>
}
else
{
    <h1 class="text-3xl">@_message</h1>
}

@code {

    [Parameter]
    public string SearchTerm { get; set; }

    public IEnumerable<Book>? BooksList { get; set; }
    private string _message = "Loading...";

    protected override async Task OnParametersSetAsync()
    {
        BooksList = null;

        SpinnerService.Show();

        var result = await BookService.SearchBooksAsync(SearchTerm);

        if (result.isSuccess && result.books.Any())
        {
            BooksList = result.books;
        }

        else if (result.isSuccess && !result.books.Any())
        {
            _message = $"No books found for {SearchTerm}.";
        }

        if (!result.isSuccess)
        {
            _message = $"There was an error while searching for {SearchTerm}, please try again later.";
        }

        SpinnerService.Hide();
    }

}

